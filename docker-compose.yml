# ==============================================================
# Docker compose file for local development environment
# - starts a MySQL server with no root pw
# - mounts persistent volumes for DB data and Rails bundler cache
# - mounts current working dir into the app so code changes you make
#   locally are reflected in the container
# ==============================================================

services:
  app:
    build:
      context: .
      dockerfile: docker/app.dev.Dockerfile
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN}
      NABU_CATALOG_BUCKET: nabu
      OPENSEARCH_URL: http://admin:fqo6bzr27*6Rdsshgsa7@search:9200
      OPENID_SIGNING_KEY: ${OPENID_SIGNING_KEY}
    volumes:
      - .:/rails
      - ./vendor/bundle:/usr/local/bundle

  proxy:
    image: nginx
    ports:
      - "3000:80"
      - "3443:443"
    volumes:
      - ./docker/nginx.conf-dev:/etc/nginx/conf.d/default.conf
      - ./docker/cert.pem:/etc/nginx/certs/cert.pem
      - ./docker/key.pem:/etc/nginx/certs/key.pem
    command: [nginx-debug, "-g", "daemon off;"]
    logging:
      driver: none

  db:
    image: mysql:8
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"

  search:
    image: opensearchproject/opensearch:latest
    ports:
      - "9200:9200"
      - "9600:9600"
    environment:
      discovery.type: single-node
      plugins.security.ssl.http.enabled: false
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: fqo6bzr27*6Rdsshgsa7
    volumes:
      - search-data:/usr/share/opensearch/data
    restart: unless-stopped

  search-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    ports:
      - "5601:5601"
    environment:
      OPENSEARCH_HOSTS: '["http://search:9200"]'

  s3:
    image: adobe/s3mock
    ports:
      - "9090:9090"
    environment:
      initialBuckets: nabu
      retainFilesOnExit: true
    volumes:
      - s3-data:/s3mockroot

volumes:
  s3-data:
  db-data:
  search-data:
