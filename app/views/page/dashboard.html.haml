
%h1 Dashboard for #{@name}

.twoup-1.column.span-12

  %fieldset
    %legend My Collections (#{@num_collections})

    .right
      %p
        = link_to 'Add new collection', new_collection_path, :class => 'button'
        = link_to 'Upload metadata file', metadata_collections_path, :class => 'button'
        = link_to 'Depositor Report', new_report_items_path, :class => 'button'

    .left
      = paginate @collections, :param_name => :collections_page

    .clear

    %table.table
      %thead
        %tr
          = sortable :identifier, 'ID'
          = sortable :title
          = sortable :created_at, 'Creation Date'
          %th Actions
      %tbody
        - if @num_collections == 0
          %tr
            %td no collections available
            %td
            %td
            %td
        - else
          - @collections.each do |collection|
            %tr
              %td= collection.identifier
              %td= collection.title
              %td= collection.created_at.to_date
              %td
                = link_to 'View', collection
                = link_to 'Edit', edit_collection_path(collection)

    = paginate @collections, :param_name => :collections_page

    %p
      - ['10', '50', "all #{@num_collections}"].each do |n|
        = link_to "Show #{n}", params.permit!.merge(collections_per_page: n.sub('all ', ''), collections_page: n.start_with?('all') ? 1 : params[:collections_page]), class: 'button'



  %fieldset
    %legend My Comments (#{@num_comments})
    %table.table
      %thead
        %tr
          %th Item
          %th Title
          %th Comment
      %tbody
        - if @num_comments == 0
          %tr
            %td
            %td
            %td you haven't left any comments on items
        - else
          - @comments.each do |comment|
            %tr
              %td= link_to comment.commentable.full_identifier, [comment.commentable.collection, comment.commentable]
              %td= comment.commentable.title
              %td= comment.body

  %fieldset
    %legend Comments on my items (#{@num_comments_left})
    %table.table
      %thead
        %tr
          %th Item
          %th User
          %th Comment
      %tbody
        - if @num_comments_left == 0
          %tr
            %td
            %td
            %td no comments left by users on your items
        - else
          - @comments_left.each do |comment|
            %tr
              %td= link_to comment.commentable.full_identifier, [comment.commentable.collection, comment.commentable]
              %td= comment.owner_name
              %td= comment.body


.twoup-2.column.span-12.last

  %fieldset
    %legend Locations

    - unless crawler_user_agent?
      .collection_map{:data => {:coordinates => @coordinates.to_json, :content => @content,
      :north_limit => @north_limit, :east_limit => @east_limit, :south_limit => @south_limit, :west_limit => @west_limit}}
    - else
      %p.map-placeholder Map not displayed for automated requests

  %fieldset
    %legend My Items (#{@num_items}) - ordered by recent edits

    .left
      = paginate @items, :param_name => :items_page

    .clear

      %table.table
        %tr
          %th Item
          %th Title
          %th Creation Date
          %th Actions

          - @items.each do |item|
            %tr
              %td= item.full_identifier
              %td= item.title
              %td= item.created_at.to_date
              %td
                = link_to 'View', [item.collection, item]
                = link_to 'Edit', edit_collection_item_path(item.collection, item)


